{"version":3,"sources":["../../src/bin/orval.ts","../../src/generate.ts","../../src/import-specs.ts","../../../../node_modules/js-yaml/dist/js-yaml.mjs","../../src/import-open-api.ts","../../src/api.ts","../../src/client.ts","../../src/utils/options.ts","../../package.json","../../src/utils/github.ts","../../src/utils/request.ts","../../src/utils/package-json.ts","../../src/utils/tsconfig.ts","../../src/utils/watcher.ts","../../src/write-specs.ts","../../src/utils/executeHook.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { isString, logError, startMessage } from '@orval/core';\nimport { cac } from 'cac';\nimport { generateConfig, generateSpec } from '../generate';\nimport pkg from '../../package.json';\nimport { normalizeOptions } from '../utils/options';\nimport { startWatcher } from '../utils/watcher';\n\nconst cli = cac('orval');\n\nstartMessage({\n  name: pkg.name,\n  version: pkg.version,\n  description: pkg.description,\n});\n\ncli.version(pkg.version);\n\ncli\n  .command(\n    '[config]',\n    'generate client with appropriate type-signatures from OpenAPI specs',\n    {\n      ignoreOptionDefaultValue: true,\n    },\n  )\n  .option('-o, --output <path>', 'output file destination')\n  .option('-i, --input <path>', 'input file (yaml or json openapi specs)')\n  .option('-c, --config <path>', 'override flags by a config file')\n  .option('-p, --project <name>', 'focus a project of the config')\n  .option('-m, --mode <name>', 'default mode that will be used')\n  .option('-c, --client <name>', 'default client that will be used')\n  .option('--mock', 'activate the mock')\n  .option(\n    '-w, --watch [path]',\n    'Watch mode, if path is not specified, it watches the input target',\n  )\n  .option('--clean [path]', 'Clean output directory')\n  .option('--prettier [path]', 'Prettier generated files')\n  .option('--tslint [path]', 'tslint generated files')\n  .option('--biome [path]', 'biome generated files')\n  .option('--tsconfig [path]', 'path to your tsconfig file')\n  .action(async (paths, cmd) => {\n    if (!cmd.config && isString(cmd.input) && isString(cmd.output)) {\n      const normalizedOptions = await normalizeOptions({\n        input: cmd.input,\n        output: {\n          target: cmd.output,\n          clean: cmd.clean,\n          prettier: cmd.prettier,\n          tslint: cmd.tslint,\n          biome: cmd.biome,\n          mock: cmd.mock,\n          client: cmd.client,\n          mode: cmd.mode,\n          tsconfig: cmd.tsconfig,\n        },\n      });\n\n      if (cmd.watch) {\n        startWatcher(\n          cmd.watch,\n          async () => {\n            try {\n              await generateSpec(process.cwd(), normalizedOptions);\n            } catch (e) {\n              logError(e);\n            }\n          },\n          normalizedOptions.input.target as string,\n        );\n      } else {\n        try {\n          await generateSpec(process.cwd(), normalizedOptions);\n        } catch (e) {\n          logError(e);\n        }\n      }\n    } else {\n      await generateConfig(cmd.config, {\n        projectName: cmd.project,\n        watch: cmd.watch,\n        clean: cmd.clean,\n        prettier: cmd.prettier,\n        tslint: cmd.tslint,\n        biome: cmd.biome,\n        mock: cmd.mock,\n        client: cmd.client,\n        mode: cmd.mode,\n        tsconfig: cmd.tsconfig,\n        input: cmd.input,\n        output: cmd.output,\n      });\n    }\n  });\n\ncli.help();\n\ncli.parse(process.argv);\n","import {\n  asyncReduce,\n  ConfigExternal,\n  upath,\n  logError,\n  getFileInfo,\n  GlobalOptions,\n  isFunction,\n  isString,\n  loadFile,\n  log,\n  NormalizedOptions,\n  NormalizedConfig,\n  removeFiles,\n} from '@orval/core';\nimport { importSpecs } from './import-specs';\nimport { normalizeOptions } from './utils/options';\nimport { startWatcher } from './utils/watcher';\nimport { writeSpecs } from './write-specs';\n\nexport const generateSpec = async (\n  workspace: string,\n  options: NormalizedOptions,\n  projectName?: string,\n) => {\n  if (options.output.clean) {\n    const extraPatterns = Array.isArray(options.output.clean)\n      ? options.output.clean\n      : [];\n\n    if (options.output.target) {\n      await removeFiles(\n        ['**/*', '!**/*.d.ts', ...extraPatterns],\n        getFileInfo(options.output.target).dirname,\n      );\n    }\n    if (options.output.schemas) {\n      await removeFiles(\n        ['**/*', '!**/*.d.ts', ...extraPatterns],\n        getFileInfo(options.output.schemas).dirname,\n      );\n    }\n    log(`${projectName ? `${projectName}: ` : ''}Cleaning output folder`);\n  }\n\n  const writeSpecBuilder = await importSpecs(workspace, options);\n  await writeSpecs(writeSpecBuilder, workspace, options, projectName);\n};\n\nexport const generateSpecs = async (\n  config: NormalizedConfig,\n  workspace: string,\n  projectName?: string,\n) => {\n  if (projectName) {\n    const options = config[projectName];\n\n    if (options) {\n      try {\n        await generateSpec(workspace, options, projectName);\n      } catch (e) {\n        logError(e, projectName);\n        process.exit(1);\n      }\n    } else {\n      logError('Project not found');\n      process.exit(1);\n    }\n    return;\n  }\n\n  let hasErrors: true | undefined;\n  const accumulate = await asyncReduce(\n    Object.entries(config),\n    async (acc, [projectName, options]) => {\n      try {\n        acc.push(await generateSpec(workspace, options, projectName));\n      } catch (e) {\n        hasErrors = true;\n        logError(e, projectName);\n      }\n      return acc;\n    },\n    [] as void[],\n  );\n\n  if (hasErrors) process.exit(1);\n  return accumulate;\n};\n\nexport const generateConfig = async (\n  configFile?: string,\n  options?: GlobalOptions,\n) => {\n  const {\n    path,\n    file: configExternal,\n    error,\n  } = await loadFile<ConfigExternal>(configFile, {\n    defaultFileName: 'orval.config',\n  });\n\n  if (!configExternal) {\n    throw `failed to load from ${path} => ${error}`;\n  }\n\n  const workspace = upath.dirname(path);\n\n  const config = await (isFunction(configExternal)\n    ? configExternal()\n    : configExternal);\n\n  const normalizedConfig = await asyncReduce(\n    Object.entries(config),\n    async (acc, [key, value]) => {\n      acc[key] = await normalizeOptions(value, workspace, options);\n\n      return acc;\n    },\n    {} as NormalizedConfig,\n  );\n\n  const fileToWatch = Object.entries(normalizedConfig)\n    .filter(\n      ([project]) =>\n        options?.projectName === undefined || project === options?.projectName,\n    )\n    .map(([, { input }]) => input.target)\n    .filter((target) => isString(target)) as string[];\n\n  if (options?.watch && fileToWatch.length) {\n    startWatcher(\n      options?.watch,\n      () => generateSpecs(normalizedConfig, workspace, options?.projectName),\n      fileToWatch,\n    );\n  } else {\n    await generateSpecs(normalizedConfig, workspace, options?.projectName);\n  }\n};\n","import SwaggerParser from '@apidevtools/swagger-parser';\nimport {\n  isObject,\n  isUrl,\n  log,\n  NormalizedOptions,\n  upath,\n  SwaggerParserOptions,\n  WriteSpecsBuilder,\n  isString,\n} from '@orval/core';\nimport chalk from 'chalk';\nimport yaml from 'js-yaml';\nimport fs from 'fs-extra';\n\nimport { importOpenApi } from './import-open-api';\n\nconst resolveSpecs = async (\n  path: string,\n  { validate, ...options }: SwaggerParserOptions,\n  isUrl: boolean,\n  isOnlySchema: boolean,\n) => {\n  try {\n    if (validate) {\n      try {\n        await SwaggerParser.validate(path, options);\n      } catch (e: any) {\n        if (e?.name === 'ParserError') {\n          throw e;\n        }\n\n        if (!isOnlySchema) {\n          log(`⚠️  ${chalk.yellow(e)}`);\n        }\n      }\n    }\n\n    const data = (await SwaggerParser.resolve(path, options)).values();\n\n    if (isUrl) {\n      return data;\n    }\n\n    // normalizing slashes after SwaggerParser\n    return Object.fromEntries(\n      Object.entries(data)\n        .sort()\n        .map(([key, value]) => [upath.resolve(key), value]),\n    );\n  } catch {\n    const file = await fs.readFile(path, 'utf8');\n\n    return {\n      [path]: yaml.load(file),\n    };\n  }\n};\n\nexport const importSpecs = async (\n  workspace: string,\n  options: NormalizedOptions,\n): Promise<WriteSpecsBuilder> => {\n  const { input, output } = options;\n\n  if (!isString(input.target)) {\n    return importOpenApi({\n      data: { [workspace]: input.target },\n      input,\n      output,\n      target: workspace,\n      workspace,\n    });\n  }\n\n  const isPathUrl = isUrl(input.target);\n\n  const data = await resolveSpecs(\n    input.target,\n    input.parserOptions,\n    isPathUrl,\n    !output.target,\n  );\n\n  return importOpenApi({\n    data,\n    input,\n    output,\n    target: input.target,\n    workspace,\n  });\n};\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import {\n  asyncReduce,\n  ContextSpecs,\n  dynamicImport,\n  generateComponentDefinition,\n  generateParameterDefinition,\n  generateSchemasDefinition,\n  GeneratorSchema,\n  ibmOpenapiValidator,\n  ImportOpenApi,\n  InputOptions,\n  isObject,\n  isReference,\n  isSchema,\n  NormalizedOutputOptions,\n  openApiConverter,\n  upath,\n  WriteSpecsBuilder,\n} from '@orval/core';\nimport { OpenAPIObject, SchemasObject } from 'openapi3-ts/oas30';\nimport { getApiBuilder } from './api';\n\nexport const importOpenApi = async ({\n  data,\n  input,\n  output,\n  target,\n  workspace,\n}: ImportOpenApi): Promise<WriteSpecsBuilder> => {\n  const specs = await generateInputSpecs({ specs: data, input, workspace });\n\n  const schemas = getApiSchemas({ input, output, target, workspace, specs });\n\n  const api = await getApiBuilder({\n    input,\n    output,\n    context: {\n      specKey: target,\n      target,\n      workspace,\n      specs,\n      output,\n    },\n  });\n\n  return {\n    ...api,\n    schemas: {\n      ...schemas,\n      [target]: [...(schemas[target] ?? []), ...api.schemas],\n    },\n    target,\n    info: specs[target].info,\n  };\n};\n\nconst generateInputSpecs = async ({\n  specs,\n  input,\n  workspace,\n}: {\n  specs: Record<string, OpenAPIObject | unknown>;\n  input: InputOptions;\n  workspace: string;\n}): Promise<Record<string, OpenAPIObject>> => {\n  const transformerFn = input.override?.transformer\n    ? await dynamicImport(input.override.transformer, workspace)\n    : undefined;\n\n  return asyncReduce(\n    Object.entries(specs),\n    async (acc, [specKey, value]) => {\n      const schema = await openApiConverter(\n        value,\n        input.converterOptions,\n        specKey,\n      );\n\n      const transfomedSchema = transformerFn ? transformerFn(schema) : schema;\n\n      if (input.validation) {\n        await ibmOpenapiValidator(transfomedSchema, input.validation);\n      }\n\n      acc[specKey] = transfomedSchema;\n\n      return acc;\n    },\n    {} as Record<string, OpenAPIObject>,\n  );\n};\n\nconst getApiSchemas = ({\n  input,\n  output,\n  target,\n  workspace,\n  specs,\n}: {\n  input: InputOptions;\n  output: NormalizedOutputOptions;\n  workspace: string;\n  target: string;\n  specs: Record<string, OpenAPIObject>;\n}) => {\n  return Object.entries(specs).reduce(\n    (acc, [specKey, spec]) => {\n      const context: ContextSpecs = {\n        specKey,\n        target,\n        workspace,\n        specs,\n        output,\n      };\n\n      const parsedSchemas = spec.openapi\n        ? (spec.components?.schemas as SchemasObject)\n        : getAllSchemas(spec, specKey);\n\n      const schemaDefinition = generateSchemasDefinition(\n        parsedSchemas,\n        context,\n        output.override.components.schemas.suffix,\n        input.filters,\n      );\n\n      const responseDefinition = generateComponentDefinition(\n        spec.components?.responses,\n        context,\n        output.override.components.responses.suffix,\n      );\n\n      const bodyDefinition = generateComponentDefinition(\n        spec.components?.requestBodies,\n        context,\n        output.override.components.requestBodies.suffix,\n      );\n\n      const parameters = generateParameterDefinition(\n        spec.components?.parameters,\n        context,\n        output.override.components.parameters.suffix,\n      );\n\n      const schemas = [\n        ...schemaDefinition,\n        ...responseDefinition,\n        ...bodyDefinition,\n        ...parameters,\n      ];\n\n      if (!schemas.length) {\n        return acc;\n      }\n\n      acc[specKey] = schemas;\n\n      return acc;\n    },\n    {} as Record<string, GeneratorSchema[]>,\n  );\n};\n\nconst getAllSchemas = (spec: object, specKey?: string): SchemasObject => {\n  const keysToOmit = [\n    'openapi',\n    'info',\n    'servers',\n    'paths',\n    'components',\n    'security',\n    'tags',\n    'externalDocs',\n  ];\n\n  const cleanedSpec = Object.fromEntries(\n    Object.entries(spec).filter(([key]) => !keysToOmit.includes(key)),\n  );\n\n  if (specKey && isSchema(cleanedSpec)) {\n    const name = upath.getSchemaFileName(specKey);\n\n    const additionalKeysToOmit = [\n      'type',\n      'properties',\n      'allOf',\n      'oneOf',\n      'anyOf',\n      'items',\n    ];\n\n    return {\n      [name]: cleanedSpec as SchemasObject,\n      ...getAllSchemas(\n        Object.fromEntries(\n          Object.entries(cleanedSpec).filter(\n            ([key]) => !additionalKeysToOmit.includes(key),\n          ),\n        ),\n      ),\n    };\n  }\n\n  const schemas = Object.entries(cleanedSpec).reduce<SchemasObject>(\n    (acc, [key, value]) => {\n      if (!isObject(value)) {\n        return acc;\n      }\n\n      if (!isSchema(value) && !isReference(value)) {\n        return { ...acc, ...getAllSchemas(value) };\n      }\n\n      acc[key] = value;\n\n      return acc;\n    },\n    {},\n  );\n\n  return {\n    ...schemas,\n    ...((spec as OpenAPIObject)?.components?.schemas as SchemasObject),\n  };\n};\n","import {\n  asyncReduce,\n  ContextSpecs,\n  generateVerbsOptions,\n  GeneratorApiBuilder,\n  GeneratorApiOperations,\n  GeneratorSchema,\n  getFullRoute,\n  getRoute,\n  GetterPropType,\n  isReference,\n  logError,\n  NormalizedInputOptions,\n  NormalizedOutputOptions,\n  resolveRef,\n} from '@orval/core';\nimport { generateMockImports } from '@orval/mock';\nimport { PathItemObject } from 'openapi3-ts/oas30';\nimport {\n  generateClientFooter,\n  generateClientHeader,\n  generateClientImports,\n  generateClientTitle,\n  generateExtraFiles,\n  generateOperations,\n} from './client';\n\nexport const getApiBuilder = async ({\n  input,\n  output,\n  context,\n}: {\n  input: NormalizedInputOptions;\n  output: NormalizedOutputOptions;\n  context: ContextSpecs;\n}): Promise<GeneratorApiBuilder> => {\n  const api = await asyncReduce(\n    Object.entries(context.specs[context.specKey].paths ?? {}),\n    async (acc, [pathRoute, verbs]: [string, PathItemObject]) => {\n      const route = getRoute(pathRoute);\n\n      let resolvedVerbs = verbs;\n      let resolvedContext = context;\n\n      if (isReference(verbs)) {\n        const { schema, imports } = resolveRef<PathItemObject>(verbs, context);\n\n        resolvedVerbs = schema;\n\n        resolvedContext = {\n          ...context,\n          ...(imports.length\n            ? {\n                specKey: imports[0].specKey,\n              }\n            : {}),\n        };\n      }\n\n      let verbsOptions = await generateVerbsOptions({\n        verbs: resolvedVerbs,\n        input,\n        output,\n        route,\n        pathRoute,\n        context: resolvedContext,\n      });\n\n      // GitHub #564 check if we want to exclude deprecated operations\n      if (output.override.useDeprecatedOperations === false) {\n        verbsOptions = verbsOptions.filter((verb) => {\n          return !verb.deprecated;\n        });\n      }\n\n      const schemas = verbsOptions.reduce(\n        (acc, { queryParams, headers, body, response, props }) => {\n          if (props) {\n            acc.push(\n              ...props.flatMap((param) =>\n                param.type === GetterPropType.NAMED_PATH_PARAMS\n                  ? param.schema\n                  : [],\n              ),\n            );\n          }\n          if (queryParams) {\n            acc.push(queryParams.schema, ...queryParams.deps);\n          }\n          if (headers) {\n            acc.push(headers.schema, ...headers.deps);\n          }\n\n          acc.push(...body.schemas);\n          acc.push(...response.schemas);\n\n          return acc;\n        },\n        [] as GeneratorSchema[],\n      );\n\n      const fullRoute = getFullRoute(\n        route,\n        verbs.servers ?? context.specs[context.specKey].servers,\n        output.baseUrl,\n      );\n      if (!output.target) {\n        logError('Output does not have a target');\n        process.exit(1);\n      }\n      const pathOperations = await generateOperations(\n        output.client,\n        verbsOptions,\n        {\n          route: fullRoute,\n          pathRoute,\n          override: output.override,\n          context: resolvedContext,\n          mock: output.mock,\n          output: output.target,\n        },\n        output,\n      );\n\n      verbsOptions.forEach((verbOption) => {\n        acc.verbOptions[verbOption.operationId] = verbOption;\n      });\n      acc.schemas.push(...schemas);\n      acc.operations = { ...acc.operations, ...pathOperations };\n\n      return acc;\n    },\n    {\n      operations: {},\n      verbOptions: {},\n      schemas: [],\n    } as GeneratorApiOperations,\n  );\n\n  const extraFiles = await generateExtraFiles(\n    output.client,\n    api.verbOptions,\n    output,\n    context,\n  );\n\n  return {\n    operations: api.operations,\n    schemas: api.schemas,\n    verbOptions: api.verbOptions,\n    title: generateClientTitle,\n    header: generateClientHeader,\n    footer: generateClientFooter,\n    imports: generateClientImports,\n    importsMock: generateMockImports,\n    extraFiles,\n  };\n};\n","import angular from '@orval/angular';\nimport axios from '@orval/axios';\nimport {\n  asyncReduce,\n  ClientFileBuilder,\n  ClientMockGeneratorBuilder,\n  ContextSpecs,\n  generateDependencyImports,\n  GeneratorClientFooter,\n  GeneratorClientHeader,\n  GeneratorClientImports,\n  GeneratorClients,\n  GeneratorClientTitle,\n  GeneratorOperations,\n  GeneratorOptions,\n  GeneratorVerbOptions,\n  GeneratorVerbsOptions,\n  isFunction,\n  NormalizedOutputOptions,\n  OutputClient,\n  OutputClientFunc,\n  pascal,\n} from '@orval/core';\nimport fetchClient from '@orval/fetch';\nimport hono from '@orval/hono';\nimport * as mock from '@orval/mock';\nimport query from '@orval/query';\nimport swr from '@orval/swr';\nimport zod from '@orval/zod';\nimport mcp from '@orval/mcp';\n\nconst DEFAULT_CLIENT = OutputClient.AXIOS;\n\nconst getGeneratorClient = (\n  outputClient: OutputClient | OutputClientFunc,\n  output: NormalizedOutputOptions,\n) => {\n  const GENERATOR_CLIENT: GeneratorClients = {\n    axios: axios({ type: 'axios' })(),\n    'axios-functions': axios({ type: 'axios-functions' })(),\n    angular: angular()(),\n    'react-query': query({ output, type: 'react-query' })(),\n    'svelte-query': query({ output, type: 'svelte-query' })(),\n    'vue-query': query({ output, type: 'vue-query' })(),\n    swr: swr()(),\n    zod: zod()(),\n    hono: hono()(),\n    fetch: fetchClient()(),\n    mcp: mcp()(),\n  };\n\n  const generator = isFunction(outputClient)\n    ? outputClient(GENERATOR_CLIENT)\n    : GENERATOR_CLIENT[outputClient];\n\n  if (!generator) {\n    throw `Oups... 🍻. Client not found: ${outputClient}`;\n  }\n\n  return generator;\n};\n\nexport const generateClientImports: GeneratorClientImports = ({\n  client = DEFAULT_CLIENT,\n  implementation,\n  imports,\n  specsName,\n  hasSchemaDir,\n  isAllowSyntheticDefaultImports,\n  hasGlobalMutator,\n  hasTagsMutator,\n  hasParamsSerializerOptions,\n  packageJson,\n  output,\n}) => {\n  const { dependencies } = getGeneratorClient(client, output);\n  return generateDependencyImports(\n    implementation,\n    dependencies\n      ? [\n          ...dependencies(\n            hasGlobalMutator,\n            hasParamsSerializerOptions,\n            packageJson,\n            output.httpClient,\n            hasTagsMutator,\n            output.override,\n          ),\n          ...imports,\n        ]\n      : imports,\n    specsName,\n    hasSchemaDir,\n    isAllowSyntheticDefaultImports,\n  );\n};\n\nexport const generateClientHeader: GeneratorClientHeader = ({\n  outputClient = DEFAULT_CLIENT,\n  isRequestOptions,\n  isGlobalMutator,\n  isMutator,\n  provideIn,\n  hasAwaitedType,\n  titles,\n  output,\n  verbOptions,\n  tag,\n  clientImplementation,\n}) => {\n  const { header } = getGeneratorClient(outputClient, output);\n  return {\n    implementation: header\n      ? header({\n          title: titles.implementation,\n          isRequestOptions,\n          isGlobalMutator,\n          isMutator,\n          provideIn,\n          hasAwaitedType,\n          output,\n          verbOptions,\n          tag,\n          clientImplementation,\n        })\n      : '',\n    implementationMock: `export const ${titles.implementationMock} = () => [\\n`,\n  };\n};\n\nexport const generateClientFooter: GeneratorClientFooter = ({\n  outputClient = DEFAULT_CLIENT,\n  operationNames,\n  hasMutator,\n  hasAwaitedType,\n  titles,\n  output,\n}) => {\n  const { footer } = getGeneratorClient(outputClient, output);\n\n  if (!footer) {\n    return {\n      implementation: '',\n      implementationMock: `\\n]\\n`,\n    };\n  }\n\n  let implementation: string;\n  try {\n    if (isFunction(outputClient)) {\n      implementation = (footer as (operationNames: any) => string)(\n        operationNames,\n      );\n      // being here means that the previous call worked\n      console.warn(\n        '[WARN] Passing an array of strings for operations names to the footer function is deprecated and will be removed in a future major release. Please pass them in an object instead: { operationNames: string[] }.',\n      );\n    } else {\n      implementation = footer({\n        operationNames,\n        title: titles.implementation,\n        hasMutator,\n        hasAwaitedType,\n      });\n    }\n  } catch {\n    implementation = footer({\n      operationNames,\n      title: titles.implementation,\n      hasMutator,\n      hasAwaitedType,\n    });\n  }\n\n  return {\n    implementation,\n    implementationMock: `]\\n`,\n  };\n};\n\nexport const generateClientTitle: GeneratorClientTitle = ({\n  outputClient = DEFAULT_CLIENT,\n  title,\n  customTitleFunc,\n  output,\n}) => {\n  const { title: generatorTitle } = getGeneratorClient(outputClient, output);\n\n  if (!generatorTitle) {\n    return {\n      implementation: '',\n      implementationMock: `get${pascal(title)}Mock`,\n    };\n  }\n\n  if (customTitleFunc) {\n    const customTitle = customTitleFunc(title);\n    return {\n      implementation: generatorTitle(customTitle),\n      implementationMock: `get${pascal(customTitle)}Mock`,\n    };\n  }\n  return {\n    implementation: generatorTitle(title),\n    implementationMock: `get${pascal(title)}Mock`,\n  };\n};\n\nconst generateMock = (\n  verbOption: GeneratorVerbOptions,\n  options: GeneratorOptions,\n): ClientMockGeneratorBuilder => {\n  if (!options.mock) {\n    return {\n      implementation: {\n        function: '',\n        handler: '',\n        handlerName: '',\n      },\n      imports: [],\n    };\n  }\n\n  if (isFunction(options.mock)) {\n    return options.mock(verbOption, options);\n  }\n\n  return mock.generateMock(\n    verbOption,\n    options as typeof options & {\n      mock: Exclude<(typeof options)['mock'], Function | undefined>;\n    },\n  );\n};\n\nexport const generateOperations = (\n  outputClient: OutputClient | OutputClientFunc = DEFAULT_CLIENT,\n  verbsOptions: GeneratorVerbsOptions,\n  options: GeneratorOptions,\n  output: NormalizedOutputOptions,\n): Promise<GeneratorOperations> => {\n  return asyncReduce(\n    verbsOptions,\n    async (acc, verbOption) => {\n      const { client: generatorClient } = getGeneratorClient(\n        outputClient,\n        output,\n      );\n      const client = await generatorClient(verbOption, options, outputClient);\n\n      if (!client.implementation) {\n        return acc;\n      }\n\n      const generatedMock = generateMock(verbOption, options);\n\n      acc[verbOption.operationId] = {\n        implementation: verbOption.doc + client.implementation,\n        imports: client.imports,\n        implementationMock: generatedMock.implementation,\n        importsMock: generatedMock.imports,\n        tags: verbOption.tags,\n        mutator: verbOption.mutator,\n        clientMutators: client.mutators,\n        formData: verbOption.formData,\n        formUrlEncoded: verbOption.formUrlEncoded,\n        paramsSerializer: verbOption.paramsSerializer,\n        operationName: verbOption.operationName,\n        fetchReviver: verbOption.fetchReviver,\n      };\n\n      return acc;\n    },\n    {} as GeneratorOperations,\n  );\n};\n\nexport const generateExtraFiles = (\n  outputClient: OutputClient | OutputClientFunc = DEFAULT_CLIENT,\n  verbsOptions: Record<string, GeneratorVerbOptions>,\n  output: NormalizedOutputOptions,\n  context: ContextSpecs,\n): Promise<ClientFileBuilder[]> => {\n  const { extraFiles: generateExtraFiles } = getGeneratorClient(\n    outputClient,\n    output,\n  );\n\n  if (!generateExtraFiles) {\n    return Promise.resolve([]);\n  }\n\n  return generateExtraFiles(verbsOptions, output, context);\n};\n","import {\n  ClientMockBuilder,\n  ConfigExternal,\n  createLogger,\n  FormDataArrayHandling,\n  GlobalMockOptions,\n  GlobalOptions,\n  HonoOptions,\n  Hook,\n  HookFunction,\n  HookOption,\n  HooksOptions,\n  isBoolean,\n  isFunction,\n  isObject,\n  isString,\n  isUndefined,\n  isUrl,\n  mergeDeep,\n  Mutator,\n  NamingConvention,\n  NormalizedHonoOptions,\n  NormalizedHookOptions,\n  NormalizedMutator,\n  NormalizedOperationOptions,\n  NormalizedOptions,\n  NormalizedOverrideOutput,\n  NormalizedQueryOptions,\n  OperationOptions,\n  OptionsExport,\n  OutputClient,\n  OutputHttpClient,\n  OutputMode,\n  OutputOptions,\n  OverrideOutput,\n  PropertySortOrder,\n  QueryOptions,\n  RefComponentSuffix,\n  SwaggerParserOptions,\n  upath,\n  NormalizedJsDocOptions,\n  JsDocOptions,\n} from '@orval/core';\nimport { DEFAULT_MOCK_OPTIONS } from '@orval/mock';\nimport chalk from 'chalk';\nimport pkg from '../../package.json';\nimport { githubResolver } from './github';\nimport { loadPackageJson } from './package-json';\nimport { loadTsconfig } from './tsconfig';\n\n/**\n * Type helper to make it easier to use orval.config.ts\n * accepts a direct {@link ConfigExternal} object.\n */\nexport function defineConfig(options: ConfigExternal): ConfigExternal {\n  return options;\n}\n\nconst createFormData = (\n  workspace: string,\n  formData: OverrideOutput['formData'],\n): NormalizedOverrideOutput['formData'] => {\n  const defaultArrayHandling = FormDataArrayHandling.SERIALIZE;\n  if (formData === undefined)\n    return { disabled: false, arrayHandling: defaultArrayHandling };\n  if (isBoolean(formData))\n    return { disabled: !formData, arrayHandling: defaultArrayHandling };\n  if (isString(formData))\n    return {\n      disabled: false,\n      mutator: normalizeMutator(workspace, formData),\n      arrayHandling: defaultArrayHandling,\n    };\n  if ('mutator' in formData || 'arrayHandling' in formData)\n    return {\n      disabled: false,\n      mutator: normalizeMutator(workspace, formData.mutator),\n      arrayHandling: formData.arrayHandling ?? defaultArrayHandling,\n    };\n  return {\n    disabled: false,\n    mutator: normalizeMutator(workspace, formData),\n    arrayHandling: defaultArrayHandling,\n  };\n};\n\nexport const normalizeOptions = async (\n  optionsExport: OptionsExport,\n  workspace = process.cwd(),\n  globalOptions: GlobalOptions = {},\n) => {\n  const options = await (isFunction(optionsExport)\n    ? optionsExport()\n    : optionsExport);\n\n  if (!options.input) {\n    createLogger().error(chalk.red(`Config require an input`));\n    process.exit(1);\n  }\n\n  if (!options.output) {\n    createLogger().error(chalk.red(`Config require an output`));\n    process.exit(1);\n  }\n\n  const inputOptions = isString(options.input)\n    ? { target: options.input }\n    : options.input;\n\n  const outputOptions = isString(options.output)\n    ? { target: options.output }\n    : options.output;\n\n  const outputWorkspace = normalizePath(\n    outputOptions.workspace || '',\n    workspace,\n  );\n\n  const { clean, prettier, client, httpClient, mode, tslint, biome } =\n    globalOptions;\n\n  const tsconfig = await loadTsconfig(\n    outputOptions.tsconfig || globalOptions.tsconfig,\n    workspace,\n  );\n\n  const packageJson = await loadPackageJson(\n    outputOptions.packageJson || globalOptions.packageJson,\n    workspace,\n  );\n\n  const mockOption = outputOptions.mock ?? globalOptions.mock;\n  let mock: GlobalMockOptions | ClientMockBuilder | undefined;\n  if (typeof mockOption === 'boolean' && mockOption) {\n    mock = DEFAULT_MOCK_OPTIONS;\n  } else if (isFunction(mockOption)) {\n    mock = mockOption;\n  } else if (!mockOption) {\n    mock = undefined;\n  } else {\n    mock = {\n      ...DEFAULT_MOCK_OPTIONS,\n      ...mockOption,\n    };\n  }\n\n  const defaultFileExtension = '.ts';\n\n  const globalQueryOptions: NormalizedQueryOptions = {\n    useQuery: true,\n    useMutation: true,\n    signal: true,\n    shouldExportMutatorHooks: true,\n    shouldExportHttpClient: true,\n    shouldExportQueryKey: true,\n    shouldSplitQueryKey: false,\n    ...normalizeQueryOptions(outputOptions.override?.query, workspace),\n  };\n\n  const normalizedOptions: NormalizedOptions = {\n    input: {\n      target: globalOptions.input\n        ? normalizePathOrUrl(globalOptions.input, process.cwd())\n        : normalizePathOrUrl(inputOptions.target, workspace),\n      validation: inputOptions.validation || false,\n      override: {\n        transformer: normalizePath(\n          inputOptions.override?.transformer,\n          workspace,\n        ),\n      },\n      converterOptions: inputOptions.converterOptions ?? {},\n      parserOptions: mergeDeep(\n        parserDefaultOptions,\n        inputOptions.parserOptions ?? {},\n      ),\n      filters: inputOptions.filters,\n    },\n    output: {\n      target: globalOptions.output\n        ? normalizePath(globalOptions.output, process.cwd())\n        : normalizePath(outputOptions.target, outputWorkspace),\n      schemas: normalizePath(outputOptions.schemas, outputWorkspace),\n      namingConvention:\n        outputOptions.namingConvention || NamingConvention.CAMEL_CASE,\n      fileExtension: outputOptions.fileExtension || defaultFileExtension,\n      workspace: outputOptions.workspace ? outputWorkspace : undefined,\n      client: outputOptions.client ?? client ?? OutputClient.AXIOS_FUNCTIONS,\n      httpClient:\n        outputOptions.httpClient ?? httpClient ?? OutputHttpClient.AXIOS,\n      mode: normalizeOutputMode(outputOptions.mode ?? mode),\n      mock,\n      clean: outputOptions.clean ?? clean ?? false,\n      docs: outputOptions.docs ?? false,\n      prettier: outputOptions.prettier ?? prettier ?? false,\n      tslint: outputOptions.tslint ?? tslint ?? false,\n      biome: outputOptions.biome ?? biome ?? false,\n      tsconfig,\n      packageJson,\n      headers: outputOptions.headers ?? false,\n      indexFiles: outputOptions.indexFiles ?? true,\n      baseUrl: outputOptions.baseUrl,\n      unionAddMissingProperties:\n        outputOptions.unionAddMissingProperties ?? false,\n      override: {\n        ...outputOptions.override,\n        mock: {\n          arrayMin: outputOptions.override?.mock?.arrayMin ?? 1,\n          arrayMax: outputOptions.override?.mock?.arrayMax ?? 10,\n          stringMin: outputOptions.override?.mock?.stringMin ?? 10,\n          stringMax: outputOptions.override?.mock?.stringMax ?? 20,\n          fractionDigits: outputOptions.override?.mock?.fractionDigits ?? 2,\n          ...outputOptions.override?.mock,\n        },\n        operations: normalizeOperationsAndTags(\n          outputOptions.override?.operations ?? {},\n          outputWorkspace,\n          {\n            query: globalQueryOptions,\n          },\n        ),\n        tags: normalizeOperationsAndTags(\n          outputOptions.override?.tags ?? {},\n          outputWorkspace,\n          {\n            query: globalQueryOptions,\n          },\n        ),\n        mutator: normalizeMutator(\n          outputWorkspace,\n          outputOptions.override?.mutator,\n        ),\n        formData: createFormData(\n          outputWorkspace,\n          outputOptions.override?.formData,\n        ),\n        formUrlEncoded:\n          (!isBoolean(outputOptions.override?.formUrlEncoded)\n            ? normalizeMutator(\n                outputWorkspace,\n                outputOptions.override?.formUrlEncoded,\n              )\n            : outputOptions.override?.formUrlEncoded) ?? true,\n        paramsSerializer: normalizeMutator(\n          outputWorkspace,\n          outputOptions.override?.paramsSerializer,\n        ),\n        header:\n          outputOptions.override?.header === false\n            ? false\n            : isFunction(outputOptions.override?.header)\n              ? outputOptions.override?.header!\n              : getDefaultFilesHeader,\n        requestOptions: outputOptions.override?.requestOptions ?? true,\n        namingConvention: outputOptions.override?.namingConvention ?? {},\n        components: {\n          schemas: {\n            suffix: RefComponentSuffix.schemas,\n            itemSuffix:\n              outputOptions.override?.components?.schemas?.itemSuffix ?? 'Item',\n            ...(outputOptions.override?.components?.schemas ?? {}),\n          },\n          responses: {\n            suffix: RefComponentSuffix.responses,\n            ...(outputOptions.override?.components?.responses ?? {}),\n          },\n          parameters: {\n            suffix: RefComponentSuffix.parameters,\n            ...(outputOptions.override?.components?.parameters ?? {}),\n          },\n          requestBodies: {\n            suffix: RefComponentSuffix.requestBodies,\n            ...(outputOptions.override?.components?.requestBodies ?? {}),\n          },\n        },\n        hono: normalizeHonoOptions(outputOptions.override?.hono, workspace),\n        jsDoc: normalizeJSDocOptions(outputOptions.override?.jsDoc),\n        query: globalQueryOptions,\n        zod: {\n          strict: {\n            param: outputOptions.override?.zod?.strict?.param ?? false,\n            query: outputOptions.override?.zod?.strict?.query ?? false,\n            header: outputOptions.override?.zod?.strict?.header ?? false,\n            body: outputOptions.override?.zod?.strict?.body ?? false,\n            response: outputOptions.override?.zod?.strict?.response ?? false,\n          },\n          generate: {\n            param: outputOptions.override?.zod?.generate?.param ?? true,\n            query: outputOptions.override?.zod?.generate?.query ?? true,\n            header: outputOptions.override?.zod?.generate?.header ?? true,\n            body: outputOptions.override?.zod?.generate?.body ?? true,\n            response: outputOptions.override?.zod?.generate?.response ?? true,\n          },\n          coerce: {\n            param: outputOptions.override?.zod?.coerce?.param ?? false,\n            query: outputOptions.override?.zod?.coerce?.query ?? false,\n            header: outputOptions.override?.zod?.coerce?.header ?? false,\n            body: outputOptions.override?.zod?.coerce?.body ?? false,\n            response: outputOptions.override?.zod?.coerce?.response ?? false,\n          },\n          preprocess: {\n            ...(outputOptions.override?.zod?.preprocess?.param\n              ? {\n                  param: normalizeMutator(\n                    workspace,\n                    outputOptions.override.zod.preprocess.param,\n                  ),\n                }\n              : {}),\n            ...(outputOptions.override?.zod?.preprocess?.query\n              ? {\n                  query: normalizeMutator(\n                    workspace,\n                    outputOptions.override.zod.preprocess.query,\n                  ),\n                }\n              : {}),\n            ...(outputOptions.override?.zod?.preprocess?.header\n              ? {\n                  header: normalizeMutator(\n                    workspace,\n                    outputOptions.override.zod.preprocess.header,\n                  ),\n                }\n              : {}),\n            ...(outputOptions.override?.zod?.preprocess?.body\n              ? {\n                  body: normalizeMutator(\n                    workspace,\n                    outputOptions.override.zod.preprocess.body,\n                  ),\n                }\n              : {}),\n            ...(outputOptions.override?.zod?.preprocess?.response\n              ? {\n                  response: normalizeMutator(\n                    workspace,\n                    outputOptions.override.zod.preprocess.response,\n                  ),\n                }\n              : {}),\n          },\n          generateEachHttpStatus:\n            outputOptions.override?.zod?.generateEachHttpStatus ?? false,\n          dateTimeOptions: outputOptions.override?.zod?.dateTimeOptions ?? {},\n          timeOptions: outputOptions.override?.zod?.timeOptions ?? {},\n        },\n        swr: {\n          ...(outputOptions.override?.swr ?? {}),\n        },\n        angular: {\n          provideIn: outputOptions.override?.angular?.provideIn ?? 'root',\n        },\n        fetch: {\n          includeHttpResponseReturnType:\n            outputOptions.override?.fetch?.includeHttpResponseReturnType ??\n            true,\n          explode: outputOptions.override?.fetch?.explode ?? true,\n          ...(outputOptions.override?.fetch ?? {}),\n        },\n        useDates: outputOptions.override?.useDates || false,\n        useDeprecatedOperations:\n          outputOptions.override?.useDeprecatedOperations ?? true,\n        enumGenerationType:\n          outputOptions.override?.useNativeEnums ?? false\n            ? 'enum'\n            : outputOptions.override?.enumGenerationType ?? 'const',\n        suppressReadonlyModifier:\n          outputOptions.override?.suppressReadonlyModifier || false,\n      },\n      allParamsOptional: outputOptions.allParamsOptional ?? false,\n      urlEncodeParameters: outputOptions.urlEncodeParameters ?? false,\n      optionsParamRequired: outputOptions.optionsParamRequired ?? false,\n      propertySortOrder:\n        outputOptions.propertySortOrder ?? PropertySortOrder.SPECIFICATION,\n    },\n    hooks: options.hooks ? normalizeHooks(options.hooks) : {},\n  };\n\n  if (!normalizedOptions.input.target) {\n    createLogger().error(chalk.red(`Config require an input target`));\n    process.exit(1);\n  }\n\n  if (!normalizedOptions.output.target && !normalizedOptions.output.schemas) {\n    createLogger().error(\n      chalk.red(`Config require an output target or schemas`),\n    );\n    process.exit(1);\n  }\n\n  return normalizedOptions;\n};\n\nconst parserDefaultOptions = {\n  validate: true,\n  resolve: { github: githubResolver },\n} as SwaggerParserOptions;\n\nconst normalizeMutator = (\n  workspace: string,\n  mutator?: Mutator,\n): NormalizedMutator | undefined => {\n  if (isObject(mutator)) {\n    if (!mutator.path) {\n      createLogger().error(chalk.red(`Mutator need a path`));\n      process.exit(1);\n    }\n\n    return {\n      ...mutator,\n      path: upath.resolve(workspace, mutator.path),\n      default: (mutator.default || !mutator.name) ?? false,\n    };\n  }\n\n  if (isString(mutator)) {\n    return {\n      path: upath.resolve(workspace, mutator),\n      default: true,\n    };\n  }\n\n  return mutator;\n};\n\nconst normalizePathOrUrl = <T>(path: T, workspace: string) => {\n  if (isString(path) && !isUrl(path)) {\n    return normalizePath(path, workspace);\n  }\n\n  return path;\n};\n\nexport const normalizePath = <T>(path: T, workspace: string) => {\n  if (!isString(path)) {\n    return path;\n  }\n  return upath.resolve(workspace, path);\n};\n\nconst normalizeOperationsAndTags = (\n  operationsOrTags: {\n    [key: string]: OperationOptions;\n  },\n  workspace: string,\n  global: {\n    query: NormalizedQueryOptions;\n  },\n): {\n  [key: string]: NormalizedOperationOptions;\n} => {\n  return Object.fromEntries(\n    Object.entries(operationsOrTags).map(\n      ([\n        key,\n        {\n          transformer,\n          mutator,\n          formData,\n          formUrlEncoded,\n          paramsSerializer,\n          query,\n          zod,\n          ...rest\n        },\n      ]) => {\n        return [\n          key,\n          {\n            ...rest,\n            ...(query\n              ? {\n                  query: normalizeQueryOptions(query, workspace, global.query),\n                }\n              : {}),\n            ...(zod\n              ? {\n                  zod: {\n                    strict: {\n                      param: zod.strict?.param ?? false,\n                      query: zod.strict?.query ?? false,\n                      header: zod.strict?.header ?? false,\n                      body: zod.strict?.body ?? false,\n                      response: zod.strict?.response ?? false,\n                    },\n                    generate: {\n                      param: zod.generate?.param ?? true,\n                      query: zod.generate?.query ?? true,\n                      header: zod.generate?.header ?? true,\n                      body: zod.generate?.body ?? true,\n                      response: zod.generate?.response ?? true,\n                    },\n                    coerce: {\n                      param: zod.coerce?.param ?? false,\n                      query: zod.coerce?.query ?? false,\n                      header: zod.coerce?.header ?? false,\n                      body: zod.coerce?.body ?? false,\n                      response: zod.coerce?.response ?? false,\n                    },\n                    preprocess: {\n                      ...(zod.preprocess?.param\n                        ? {\n                            param: normalizeMutator(\n                              workspace,\n                              zod.preprocess.param,\n                            ),\n                          }\n                        : {}),\n                      ...(zod.preprocess?.query\n                        ? {\n                            query: normalizeMutator(\n                              workspace,\n                              zod.preprocess.query,\n                            ),\n                          }\n                        : {}),\n                      ...(zod.preprocess?.header\n                        ? {\n                            header: normalizeMutator(\n                              workspace,\n                              zod.preprocess.header,\n                            ),\n                          }\n                        : {}),\n                      ...(zod.preprocess?.body\n                        ? {\n                            body: normalizeMutator(\n                              workspace,\n                              zod.preprocess.body,\n                            ),\n                          }\n                        : {}),\n                      ...(zod.preprocess?.response\n                        ? {\n                            response: normalizeMutator(\n                              workspace,\n                              zod.preprocess.response,\n                            ),\n                          }\n                        : {}),\n                    },\n                    generateEachHttpStatus:\n                      zod?.generateEachHttpStatus ?? false,\n                    dateTimeOptions: zod?.dateTimeOptions ?? {},\n                    timeOptions: zod?.timeOptions ?? {},\n                  },\n                }\n              : {}),\n            ...(transformer\n              ? { transformer: normalizePath(transformer, workspace) }\n              : {}),\n            ...(mutator\n              ? { mutator: normalizeMutator(workspace, mutator) }\n              : {}),\n            ...createFormData(workspace, formData),\n            ...(formUrlEncoded\n              ? {\n                  formUrlEncoded: !isBoolean(formUrlEncoded)\n                    ? normalizeMutator(workspace, formUrlEncoded)\n                    : formUrlEncoded,\n                }\n              : {}),\n            ...(paramsSerializer\n              ? {\n                  paramsSerializer: normalizeMutator(\n                    workspace,\n                    paramsSerializer,\n                  ),\n                }\n              : {}),\n          },\n        ];\n      },\n    ),\n  );\n};\n\nconst normalizeOutputMode = (mode?: OutputMode): OutputMode => {\n  if (!mode) {\n    return OutputMode.SINGLE;\n  }\n\n  if (!Object.values(OutputMode).includes(mode)) {\n    createLogger().warn(chalk.yellow(`Unknown the provided mode => ${mode}`));\n    return OutputMode.SINGLE;\n  }\n\n  return mode;\n};\n\nconst normalizeHooks = (hooks: HooksOptions): NormalizedHookOptions => {\n  const keys = Object.keys(hooks) as unknown as Hook[];\n\n  return keys.reduce((acc, key: Hook) => {\n    if (isString(hooks[key])) {\n      return {\n        ...acc,\n        [key]: [hooks[key]] as string[],\n      };\n    } else if (Array.isArray(hooks[key])) {\n      return {\n        ...acc,\n        [key]: hooks[key] as string[],\n      };\n    } else if (isFunction(hooks[key])) {\n      return {\n        ...acc,\n        [key]: [hooks[key]] as HookFunction[],\n      };\n    } else if (isObject(hooks[key])) {\n      return {\n        ...acc,\n        [key]: [hooks[key]] as HookOption[],\n      };\n    }\n\n    return acc;\n  }, {} as NormalizedHookOptions);\n};\n\nconst normalizeHonoOptions = (\n  hono: HonoOptions = {},\n  workspace: string,\n): NormalizedHonoOptions => {\n  return {\n    ...(hono.handlers\n      ? { handlers: upath.resolve(workspace, hono.handlers) }\n      : {}),\n    compositeRoute: hono.compositeRoute ?? '',\n    validator: hono.validator ?? true,\n    validatorOutputPath: hono.validatorOutputPath\n      ? upath.resolve(workspace, hono.validatorOutputPath)\n      : '',\n  };\n};\n\nconst normalizeJSDocOptions = (\n  jsdoc: JsDocOptions = {},\n): NormalizedJsDocOptions => {\n  return {\n    ...jsdoc,\n  };\n};\n\nconst normalizeQueryOptions = (\n  queryOptions: QueryOptions = {},\n  outputWorkspace: string,\n  globalOptions: NormalizedQueryOptions = {},\n): NormalizedQueryOptions => {\n  if (queryOptions.options) {\n    console.warn(\n      '[WARN] Using query options is deprecated and will be removed in a future major release. Please use queryOptions or mutationOptions instead.',\n    );\n  }\n\n  return {\n    ...(!isUndefined(queryOptions.usePrefetch)\n      ? { usePrefetch: queryOptions.usePrefetch }\n      : {}),\n    ...(!isUndefined(queryOptions.useQuery)\n      ? { useQuery: queryOptions.useQuery }\n      : {}),\n    ...(!isUndefined(queryOptions.useSuspenseQuery)\n      ? { useSuspenseQuery: queryOptions.useSuspenseQuery }\n      : {}),\n    ...(!isUndefined(queryOptions.useMutation)\n      ? { useMutation: queryOptions.useMutation }\n      : {}),\n    ...(!isUndefined(queryOptions.useInfinite)\n      ? { useInfinite: queryOptions.useInfinite }\n      : {}),\n    ...(!isUndefined(queryOptions.useSuspenseInfiniteQuery)\n      ? { useSuspenseInfiniteQuery: queryOptions.useSuspenseInfiniteQuery }\n      : {}),\n    ...(queryOptions.useInfiniteQueryParam\n      ? { useInfiniteQueryParam: queryOptions.useInfiniteQueryParam }\n      : {}),\n    ...(queryOptions.options ? { options: queryOptions.options } : {}),\n    ...(globalOptions.queryKey\n      ? {\n          queryKey: globalOptions.queryKey,\n        }\n      : {}),\n    ...(queryOptions?.queryKey\n      ? {\n          queryKey: normalizeMutator(outputWorkspace, queryOptions?.queryKey),\n        }\n      : {}),\n    ...(globalOptions.queryOptions\n      ? {\n          queryOptions: globalOptions.queryOptions,\n        }\n      : {}),\n    ...(queryOptions?.queryOptions\n      ? {\n          queryOptions: normalizeMutator(\n            outputWorkspace,\n            queryOptions?.queryOptions,\n          ),\n        }\n      : {}),\n    ...(globalOptions.mutationOptions\n      ? {\n          mutationOptions: globalOptions.mutationOptions,\n        }\n      : {}),\n    ...(queryOptions?.mutationOptions\n      ? {\n          mutationOptions: normalizeMutator(\n            outputWorkspace,\n            queryOptions?.mutationOptions,\n          ),\n        }\n      : {}),\n    ...(!isUndefined(globalOptions.shouldExportQueryKey)\n      ? {\n          shouldExportQueryKey: globalOptions.shouldExportQueryKey,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.shouldExportQueryKey)\n      ? { shouldExportQueryKey: queryOptions.shouldExportQueryKey }\n      : {}),\n    ...(!isUndefined(globalOptions.shouldExportHttpClient)\n      ? {\n          shouldExportHttpClient: globalOptions.shouldExportHttpClient,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.shouldExportHttpClient)\n      ? { shouldExportHttpClient: queryOptions.shouldExportHttpClient }\n      : {}),\n    ...(!isUndefined(globalOptions.shouldExportMutatorHooks)\n      ? {\n          shouldExportMutatorHooks: globalOptions.shouldExportMutatorHooks,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.shouldExportMutatorHooks)\n      ? { shouldExportMutatorHooks: queryOptions.shouldExportMutatorHooks }\n      : {}),\n    ...(!isUndefined(globalOptions.shouldSplitQueryKey)\n      ? {\n          shouldSplitQueryKey: globalOptions.shouldSplitQueryKey,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.shouldSplitQueryKey)\n      ? { shouldSplitQueryKey: queryOptions.shouldSplitQueryKey }\n      : {}),\n    ...(!isUndefined(globalOptions.signal)\n      ? {\n          signal: globalOptions.signal,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.signal)\n      ? { signal: queryOptions.signal }\n      : {}),\n    ...(!isUndefined(globalOptions.version)\n      ? {\n          version: globalOptions.version,\n        }\n      : {}),\n    ...(!isUndefined(queryOptions.version)\n      ? { version: queryOptions.version }\n      : {}),\n  };\n};\n\nexport const getDefaultFilesHeader = ({\n  title,\n  description,\n  version,\n}: {\n  title?: string;\n  description?: string;\n  version?: string;\n} = {}) => [\n  `Generated by ${pkg.name} v${pkg.version} 🍺`,\n  `Do not edit manually.`,\n  ...(title ? [title] : []),\n  ...(description ? [description] : []),\n  ...(version ? [`OpenAPI spec version: ${version}`] : []),\n];\n","{\n  \"name\": \"orval\",\n  \"description\": \"A swagger client generator for typescript\",\n  \"version\": \"7.11.2\",\n  \"license\": \"MIT\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"bin\": \"dist/bin/orval.js\",\n  \"type\": \"commonjs\",\n  \"main\": \"dist/index.js\",\n  \"keywords\": [\n    \"rest\",\n    \"client\",\n    \"swagger\",\n    \"open-api\",\n    \"fetch\",\n    \"data fetching\",\n    \"code-generation\",\n    \"angular\",\n    \"react\",\n    \"react-query\",\n    \"svelte\",\n    \"svelte-query\",\n    \"vue\",\n    \"vue-query\",\n    \"msw\",\n    \"mock\",\n    \"axios\",\n    \"vue-query\",\n    \"vue\",\n    \"swr\",\n    \"zod\",\n    \"hono\"\n  ],\n  \"author\": {\n    \"name\": \"Victor Bury\",\n    \"email\": \"victor@anymaniax.com\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/orval-labs/orval.git\"\n  },\n  \"scripts\": {\n    \"build\": \"tsup ./src/bin/orval.ts ./src/index.ts --target node12 --clean --sourcemap --dts\",\n    \"dev\": \"tsup ./src/bin/orval.ts ./src/index.ts --target node12 --clean --sourcemap --watch ./src --onSuccess 'yarn generate-api'\",\n    \"lint\": \"eslint src/**/*.ts\",\n    \"generate-api\": \"node ./dist/bin/orval.js --config ../../samples/react-query/basic/orval.config.ts\",\n    \"test\": \"tsc --noEmit && vitest --passWithNoTests\"\n  },\n  \"devDependencies\": {\n    \"@types/inquirer\": \"^9.0.6\",\n    \"@types/js-yaml\": \"^4.0.8\",\n    \"@types/lodash.uniq\": \"^4.5.8\",\n    \"typedoc-plugin-coverage\": \"^3.4.1\"\n  },\n  \"dependencies\": {\n    \"@apidevtools/swagger-parser\": \"^10.1.1\",\n    \"@orval/angular\": \"7.11.2\",\n    \"@orval/axios\": \"7.11.2\",\n    \"@orval/core\": \"7.11.2\",\n    \"@orval/fetch\": \"7.11.2\",\n    \"@orval/hono\": \"7.11.2\",\n    \"@orval/mcp\": \"7.11.2\",\n    \"@orval/mock\": \"7.11.2\",\n    \"@orval/query\": \"7.11.2\",\n    \"@orval/swr\": \"7.11.2\",\n    \"@orval/zod\": \"7.11.2\",\n    \"ajv\": \"^8.17.1\",\n    \"cac\": \"^6.7.14\",\n    \"chalk\": \"^4.1.2\",\n    \"chokidar\": \"^4.0.3\",\n    \"enquirer\": \"^2.4.1\",\n    \"execa\": \"^5.1.1\",\n    \"find-up\": \"5.0.0\",\n    \"fs-extra\": \"^11.3.0\",\n    \"lodash.uniq\": \"^4.5.0\",\n    \"openapi3-ts\": \"4.2.2\",\n    \"string-argv\": \"^0.3.2\",\n    \"tsconfck\": \"^2.0.1\",\n    \"typedoc\": \"^0.28.7\",\n    \"typedoc-plugin-markdown\": \"^4.8.0\",\n    \"typescript\": \"^5.6.3\"\n  }\n}\n","import SwaggerParser from '@apidevtools/swagger-parser';\nimport { upath } from '@orval/core';\nimport { prompt } from 'enquirer';\nimport fs from 'fs-extra';\nimport https from 'https';\nimport { request } from './request';\n\nexport const getGithubSpecReq = ({\n  accessToken,\n  repo,\n  owner,\n  branch,\n  path,\n}: {\n  accessToken: string;\n  repo: string;\n  owner: string;\n  branch: string;\n  path: string;\n}): [https.RequestOptions, string] => {\n  const payload = JSON.stringify({\n    query: `query {\n      repository(name: \"${repo}\", owner: \"${owner}\") {\n        object(expression: \"${branch}:${path}\") {\n          ... on Blob {\n            text\n          }\n        }\n      }\n    }`,\n  });\n\n  return [\n    {\n      method: 'POST',\n      hostname: 'api.github.com',\n      path: '/graphql',\n      headers: {\n        'content-type': 'application/json',\n        'user-agent': 'orval-importer',\n        authorization: `bearer ${accessToken}`,\n        'Content-Length': payload.length,\n      },\n    },\n    payload,\n  ];\n};\n\nlet githubToken: string | null = null;\n\nexport const getGithubAcessToken = async (githubTokenPath: string) => {\n  if (githubToken) {\n    return githubToken;\n  }\n\n  if (await fs.pathExists(githubTokenPath)) {\n    return fs.readFile(githubTokenPath, 'utf-8');\n  } else {\n    const answers = await prompt<{\n      githubToken: string;\n      saveToken: boolean;\n    }>([\n      {\n        type: 'input',\n        name: 'githubToken',\n        message:\n          'Please provide a GitHub token with `repo` rules checked (https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/)',\n      },\n      {\n        type: 'confirm',\n        name: 'saveToken',\n        message:\n          'Would you like to store your token for the next time? (stored in your node_modules)',\n      },\n    ]);\n\n    githubToken = answers.githubToken;\n\n    if (answers.saveToken) {\n      await fs.outputFile(githubTokenPath, answers.githubToken);\n    }\n    return answers.githubToken;\n  }\n};\n\nexport const getGithubOpenApi = async (url: string): Promise<string> => {\n  const githubTokenPath = upath.join(__dirname, '.githubToken');\n  const accessToken = await getGithubAcessToken(githubTokenPath);\n  const [info] = url.split('github.com/').slice(-1);\n\n  const [owner, repo, , branch, ...paths] = info.split('/');\n  const path = paths.join('/');\n\n  try {\n    const { body } = await request<{\n      data?: { repository: any };\n      errors?: { type: string }[];\n    }>(...getGithubSpecReq({ accessToken, repo, owner, branch, path }));\n    if (body.errors?.length) {\n      const isErrorRemoveLink = body.errors?.some(\n        (error) => error?.type === 'NOT_FOUND',\n      );\n\n      if (isErrorRemoveLink) {\n        const answers = await prompt<{ removeToken: boolean }>([\n          {\n            type: 'confirm',\n            name: 'removeToken',\n            message:\n              \"Your token doesn't have the correct permissions, should we remove it?\",\n          },\n        ]);\n        if (answers.removeToken) {\n          await fs.unlink(githubTokenPath);\n        }\n      }\n    }\n\n    return body.data?.repository?.object.text;\n  } catch (e: any) {\n    if (!e.body) {\n      throw `Oups... 🍻. ${e}`;\n    }\n\n    if (e.body.message === 'Bad credentials') {\n      const answers = await prompt<{ removeToken: boolean }>([\n        {\n          type: 'confirm',\n          name: 'removeToken',\n          message:\n            \"Your token doesn't have the correct permissions, should we remove it?\",\n        },\n      ]);\n      if (answers.removeToken) {\n        await fs.unlink(githubTokenPath);\n      }\n    }\n    throw e.body.message || `Oups... 🍻. ${e}`;\n  }\n};\n\nexport const githubResolver = {\n  order: 199,\n  canRead(file: SwaggerParser.FileInfo) {\n    return file.url.includes('github.com');\n  },\n\n  read(file: SwaggerParser.FileInfo) {\n    return getGithubOpenApi(file.url);\n  },\n};\n","import http from 'http';\nimport https from 'https';\n\nexport type Response<T = { [key: string]: unknown }> = {\n  status: http.IncomingMessage['statusCode'];\n  headers: http.IncomingMessage['headers'];\n  body: T;\n};\n\nexport const request = <T>(\n  urlOptions: string | https.RequestOptions | URL,\n  data?: string,\n): Promise<Response<T>> => {\n  return new Promise((resolve, reject) => {\n    const req = https.request(urlOptions, (res) => {\n      let body = '';\n      res.on('data', (chunk) => (body += chunk.toString()));\n      res.on('error', reject);\n      res.on('end', () => {\n        const response = {\n          status: res.statusCode,\n          headers: res.headers,\n          body: JSON.parse(body),\n        };\n        if (res.statusCode && res.statusCode >= 200 && res.statusCode <= 299) {\n          resolve(response);\n        } else {\n          reject(response);\n        }\n      });\n    });\n    req.on('error', reject);\n    if (data) {\n      req.write(data, 'binary');\n    }\n    req.end();\n  });\n};\n","import { isString, log, PackageJson } from '@orval/core';\nimport chalk from 'chalk';\nimport findUp from 'find-up';\nimport fs from 'fs-extra';\nimport yaml from 'js-yaml';\nimport { normalizePath } from './options';\n\nexport const loadPackageJson = async (\n  packageJson?: string,\n  workspace = process.cwd(),\n): Promise<PackageJson | undefined> => {\n  if (!packageJson) {\n    const pkgPath = await findUp(['package.json'], {\n      cwd: workspace,\n    });\n    if (pkgPath) {\n      const pkg = await import(pkgPath);\n      return await maybeReplaceCatalog(pkg, workspace);\n    }\n    return;\n  }\n\n  const normalizedPath = normalizePath(packageJson, workspace);\n  if (fs.existsSync(normalizedPath)) {\n    const pkg = await import(normalizedPath);\n\n    return await maybeReplaceCatalog(pkg, workspace);\n  }\n  return;\n};\n\nconst maybeReplaceCatalog = async (\n  pkg: PackageJson,\n  workspace: string,\n): Promise<PackageJson> => {\n  if (\n    ![\n      ...Object.entries(pkg.dependencies ?? {}),\n      ...Object.entries(pkg.devDependencies ?? {}),\n      ...Object.entries(pkg.peerDependencies ?? {}),\n    ].some(([, value]) => isString(value) && value.startsWith('catalog:'))\n  ) {\n    return pkg;\n  }\n\n  const filePath = await findUp('pnpm-workspace.yaml', { cwd: workspace });\n  if (!filePath) {\n    log(\n      `⚠️  ${chalk.yellow('package.json contains pnpm catalog: in dependencies, but no pnpm-workspace.yaml was found.')}`,\n    );\n    return pkg;\n  }\n  const file = await fs.readFile(filePath, 'utf8');\n\n  const pnpmWorkspaceFile = yaml.load(file) as Record<string, any>;\n  performSubstitution(pkg.dependencies, pnpmWorkspaceFile);\n  performSubstitution(pkg.devDependencies, pnpmWorkspaceFile);\n  performSubstitution(pkg.peerDependencies, pnpmWorkspaceFile);\n\n  return pkg;\n};\n\nconst performSubstitution = (\n  dependencies: Record<string, string> | undefined,\n  pnpmWorkspaceFile: Record<string, any>,\n) => {\n  if (!dependencies) return;\n  for (const [packageName, version] of Object.entries(dependencies)) {\n    if (version === 'catalog:' || version === 'catalog:default') {\n      if (!pnpmWorkspaceFile.catalog) {\n        log(\n          `⚠️  ${chalk.yellow(`when reading from pnpm-workspace.yaml, catalog: substitution for the package '${packageName}' failed as there were no default catalog.`)}`,\n        );\n        continue;\n      }\n      const sub = pnpmWorkspaceFile.catalog[packageName];\n      if (!sub) {\n        log(\n          `⚠️  ${chalk.yellow(`when reading from pnpm-workspace.yaml, catalog: substitution for the package '${packageName}' failed as there were no matching package in the default catalog.`)}`,\n        );\n        continue;\n      }\n      dependencies[packageName] = sub;\n    } else if (version.startsWith('catalog:')) {\n      const catalogName = version.substring('catalog:'.length);\n      const catalog = pnpmWorkspaceFile.catalogs?.[catalogName];\n      if (!catalog) {\n        log(\n          `⚠️  ${chalk.yellow(`when reading from pnpm-workspace.yaml, '${version}' substitution for the package '${packageName}' failed as there were no matching catalog named '${catalogName}'. (available named catalogs are: ${Object.keys(pnpmWorkspaceFile.catalogs ?? {}).join(', ')})`)}`,\n        );\n        continue;\n      }\n      const sub = catalog[packageName];\n      if (!sub) {\n        log(\n          `⚠️  ${chalk.yellow(`when reading from pnpm-workspace.yaml, '${version}' substitution for the package '${packageName}' failed as there were no package in the catalog named '${catalogName}'. (packages in the catalog are: ${Object.keys(catalog).join(', ')})`)}`,\n        );\n        continue;\n      }\n      dependencies[packageName] = sub;\n    }\n  }\n};\n","import { isObject, isString, isUndefined, Tsconfig } from '@orval/core';\nimport findUp from 'find-up';\nimport fs from 'fs-extra';\nimport { parse } from 'tsconfck';\nimport { normalizePath } from './options';\n\nexport const loadTsconfig = async (\n  tsconfig?: Tsconfig | string,\n  workspace = process.cwd(),\n): Promise<Tsconfig | undefined> => {\n  if (isUndefined(tsconfig)) {\n    const configPath = await findUp(['tsconfig.json', 'jsconfig.json'], {\n      cwd: workspace,\n    });\n    if (configPath) {\n      const config = await parse(configPath);\n      return config.tsconfig;\n    }\n    return;\n  }\n\n  if (isString(tsconfig)) {\n    const normalizedPath = normalizePath(tsconfig, workspace);\n    if (fs.existsSync(normalizedPath)) {\n      const config = await parse(normalizedPath);\n\n      const tsconfig =\n        config.referenced?.find(\n          ({ tsconfigFile }) => tsconfigFile === normalizedPath,\n        )?.tsconfig || config.tsconfig;\n\n      return tsconfig;\n    }\n    return;\n  }\n\n  if (isObject(tsconfig)) {\n    return tsconfig;\n  }\n  return;\n};\n","import { log, logError } from '@orval/core';\n\nexport const startWatcher = async (\n  watchOptions: boolean | string | (string | boolean)[],\n  watchFn: () => Promise<any>,\n  defaultTarget: string | string[] = '.',\n) => {\n  if (!watchOptions) return;\n  const { watch } = await import('chokidar');\n\n  const ignored = ['**/{.git,node_modules}/**'];\n\n  const watchPaths =\n    typeof watchOptions === 'boolean'\n      ? defaultTarget\n      : Array.isArray(watchOptions)\n        ? watchOptions.filter(\n            (path): path is string => typeof path === 'string',\n          )\n        : watchOptions;\n\n  log(\n    `Watching for changes in ${\n      Array.isArray(watchPaths)\n        ? watchPaths.map((v) => '\"' + v + '\"').join(' | ')\n        : '\"' + watchPaths + '\"'\n    }`,\n  );\n\n  const watcher = watch(watchPaths, {\n    ignorePermissionErrors: true,\n    ignored,\n  });\n  watcher.on('all', async (type, file) => {\n    log(`Change detected: ${type} ${file}`);\n\n    try {\n      await watchFn();\n    } catch (e) {\n      logError(e);\n    }\n  });\n};\n","import {\n  createSuccessMessage,\n  getFileInfo,\n  getMockFileExtensionByTypeName,\n  isRootKey,\n  jsDoc,\n  log,\n  NormalizedOptions,\n  OutputMode,\n  upath,\n  writeSchemas,\n  writeSingleMode,\n  WriteSpecsBuilder,\n  writeSplitMode,\n  writeSplitTagsMode,\n  writeTagsMode,\n} from '@orval/core';\nimport chalk from 'chalk';\nimport execa from 'execa';\nimport fs from 'fs-extra';\nimport uniq from 'lodash.uniq';\nimport { InfoObject } from 'openapi3-ts/oas30';\nimport { TypeDocOptions } from 'typedoc';\nimport { executeHook } from './utils';\n\nconst getHeader = (\n  option: false | ((info: InfoObject) => string | string[]),\n  info: InfoObject,\n): string => {\n  if (!option) {\n    return '';\n  }\n\n  const header = option(info);\n\n  return Array.isArray(header) ? jsDoc({ description: header }) : header;\n};\n\nexport const writeSpecs = async (\n  builder: WriteSpecsBuilder,\n  workspace: string,\n  options: NormalizedOptions,\n  projectName?: string,\n) => {\n  const { info = { title: '', version: 0 }, schemas, target } = builder;\n  const { output } = options;\n  const projectTitle = projectName || info.title;\n\n  const specsName = Object.keys(schemas).reduce(\n    (acc, specKey) => {\n      const basePath = upath.getSpecName(specKey, target);\n      const name = basePath.slice(1).split('/').join('-');\n\n      acc[specKey] = name;\n\n      return acc;\n    },\n    {} as Record<keyof typeof schemas, string>,\n  );\n\n  const header = getHeader(output.override.header, info as InfoObject);\n\n  if (output.schemas) {\n    const rootSchemaPath = output.schemas;\n\n    const fileExtension = ['tags', 'tags-split', 'split'].includes(output.mode)\n      ? '.ts'\n      : output.fileExtension ?? '.ts';\n\n    await Promise.all(\n      Object.entries(schemas).map(([specKey, schemas]) => {\n        const schemaPath = !isRootKey(specKey, target)\n          ? upath.join(rootSchemaPath, specsName[specKey])\n          : rootSchemaPath;\n\n        return writeSchemas({\n          schemaPath,\n          schemas,\n          target,\n          namingConvention: output.namingConvention,\n          fileExtension,\n          specsName,\n          specKey,\n          isRootKey: isRootKey(specKey, target),\n          header,\n          indexFiles: output.indexFiles,\n        });\n      }),\n    );\n  }\n\n  let implementationPaths: string[] = [];\n\n  if (output.target) {\n    const writeMode = getWriteMode(output.mode);\n    implementationPaths = await writeMode({\n      builder,\n      workspace,\n      output,\n      specsName,\n      header,\n      needSchema: !output.schemas && output.client !== 'zod',\n    });\n  }\n\n  if (output.workspace) {\n    const workspacePath = output.workspace;\n    const imports = implementationPaths\n      .filter(\n        (path) =>\n          !output.mock ||\n          !path.endsWith(`.${getMockFileExtensionByTypeName(output.mock)}.ts`),\n      )\n      .map((path) =>\n        upath.relativeSafe(\n          workspacePath,\n          getFileInfo(path).pathWithoutExtension,\n        ),\n      );\n\n    if (output.schemas) {\n      imports.push(\n        upath.relativeSafe(workspacePath, getFileInfo(output.schemas).dirname),\n      );\n    }\n\n    if (output.indexFiles) {\n      const indexFile = upath.join(workspacePath, '/index.ts');\n\n      if (await fs.pathExists(indexFile)) {\n        const data = await fs.readFile(indexFile, 'utf8');\n        const importsNotDeclared = imports.filter((imp) => !data.includes(imp));\n        await fs.appendFile(\n          indexFile,\n          uniq(importsNotDeclared)\n            .map((imp) => `export * from '${imp}';\\n`)\n            .join(''),\n        );\n      } else {\n        await fs.outputFile(\n          indexFile,\n          uniq(imports)\n            .map((imp) => `export * from '${imp}';`)\n            .join('\\n') + '\\n',\n        );\n      }\n\n      implementationPaths = [indexFile, ...implementationPaths];\n    }\n  }\n\n  if (builder.extraFiles.length) {\n    await Promise.all(\n      builder.extraFiles.map(async (file) =>\n        fs.outputFile(file.path, file.content),\n      ),\n    );\n\n    implementationPaths = [\n      ...implementationPaths,\n      ...builder.extraFiles.map((file) => file.path),\n    ];\n  }\n\n  const paths = [\n    ...(output.schemas ? [getFileInfo(output.schemas).dirname] : []),\n    ...implementationPaths,\n  ];\n\n  if (options.hooks.afterAllFilesWrite) {\n    await executeHook(\n      'afterAllFilesWrite',\n      options.hooks.afterAllFilesWrite,\n      paths,\n    );\n  }\n\n  if (output.prettier) {\n    try {\n      await execa('prettier', ['--write', ...paths]);\n    } catch {\n      log(\n        chalk.yellow(\n          `⚠️  ${projectTitle ? `${projectTitle} - ` : ''}Prettier not found`,\n        ),\n      );\n    }\n  }\n\n  if (output.biome) {\n    try {\n      await execa('biome', ['check', '--write', ...paths]);\n    } catch (e: any) {\n      const message =\n        e.exitCode === 1\n          ? e.stdout + e.stderr\n          : `⚠️  ${projectTitle ? `${projectTitle} - ` : ''}biome not found`;\n\n      log(chalk.yellow(message));\n    }\n  }\n\n  if (output.docs) {\n    try {\n      let config: Partial<TypeDocOptions> = {};\n      let configPath: string | null = null;\n      if (typeof output.docs === 'object') {\n        ({ configPath = null, ...config } = output.docs);\n        if (configPath) {\n          config.options = configPath;\n        }\n      }\n\n      const getTypedocApplication = async () => {\n        const { Application } = await import('typedoc');\n        return Application;\n      };\n\n      const Application = await getTypedocApplication();\n      const app = await Application.bootstrapWithPlugins({\n        entryPoints: paths,\n        theme: 'markdown',\n        // Set the custom config location if it has been provided.\n        ...config,\n        plugin: ['typedoc-plugin-markdown', ...(config.plugin ?? [])],\n      });\n      // Set defaults if the have not been provided by the external config.\n      if (!app.options.isSet('readme')) {\n        app.options.setValue('readme', 'none');\n      }\n      if (!app.options.isSet('logLevel')) {\n        app.options.setValue('logLevel', 'None');\n      }\n      const project = await app.convert();\n      if (project) {\n        await app.generateDocs(project, app.options.getValue('out') as string);\n      } else {\n        throw new Error('TypeDoc not initialised');\n      }\n    } catch (e: any) {\n      const message =\n        e.exitCode === 1\n          ? e.stdout + e.stderr\n          : `⚠️  ${projectTitle ? `${projectTitle} - ` : ''}Unable to generate docs`;\n\n      log(chalk.yellow(message));\n    }\n  }\n\n  createSuccessMessage(projectTitle);\n};\n\nconst getWriteMode = (mode: OutputMode) => {\n  switch (mode) {\n    case OutputMode.SPLIT:\n      return writeSplitMode;\n    case OutputMode.TAGS:\n      return writeTagsMode;\n    case OutputMode.TAGS_SPLIT:\n      return writeSplitTagsMode;\n    case OutputMode.SINGLE:\n    default:\n      return writeSingleMode;\n  }\n};\n","import {\n  Hook,\n  HookOption,\n  isFunction,\n  isObject,\n  isString,\n  log,\n  logError,\n  NormalizedHookCommand,\n} from '@orval/core';\nimport chalk from 'chalk';\nimport execa from 'execa';\nimport { parseArgsStringToArgv } from 'string-argv';\n\nexport const executeHook = async (\n  name: Hook,\n  commands: NormalizedHookCommand = [],\n  args: string[] = [],\n) => {\n  log(chalk.white(`Running ${name} hook...`));\n\n  for (const command of commands) {\n    try {\n      if (isString(command)) {\n        await executeCommand(command, args);\n      } else if (isFunction(command)) {\n        await command(args);\n      } else if (isObject(command)) {\n        await executeObjectCommand(command as HookOption, args);\n      }\n    } catch (e) {\n      logError(e, `Failed to run ${name} hook`);\n    }\n  }\n};\n\nasync function executeCommand(command: string, args: string[]) {\n  const [cmd, ..._args] = [...parseArgsStringToArgv(command), ...args];\n\n  await execa(cmd, _args);\n}\n\nasync function executeObjectCommand(command: HookOption, args: string[]) {\n  if (command.injectGeneratedDirsAndFiles === false) {\n    args = [];\n  }\n\n  if (isString(command.command)) {\n    await executeCommand(command.command, args);\n  } else if (isFunction(command.command)) {\n    await command.command();\n  }\n}\n"],"mappings":"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","names":["import_core","import_core","import_core","exception","map","schema","type","extend","str","string","import_core","import_core","axios","angular","query","swr","zod","hono","fetchClient","mcp","generateMock","generateExtraFiles","_a","schema","acc","schema","isUrl","SwaggerParser","chalk","fs","import_core","import_mock","import_chalk","import_core","import_fs_extra","https","fs","import_core","import_chalk","import_fs_extra","findUp","fs","chalk","import_core","import_find_up","import_fs_extra","findUp","fs","tsconfig","chalk","mock","query","zod","hono","import_core","type","import_core","import_chalk","import_execa","import_fs_extra","import_core","import_chalk","chalk","execa","schemas","fs","uniq","execa","chalk","Application","projectName"]}
{"version":3,"file":"TanStackRouterDevtoolsPanelCore.js","sources":["../../src/TanStackRouterDevtoolsPanelCore.tsx"],"sourcesContent":["import { render } from 'solid-js/web'\nimport { createSignal, lazy } from 'solid-js'\nimport { DevtoolsOnCloseContext, ShadowDomTargetContext } from './context'\nimport type { JSX } from 'solid-js'\nimport type { AnyRouter } from '@tanstack/router-core'\n\ninterface TanStackRouterDevtoolsPanelCoreOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: JSX.CSSProperties\n  /**\n   * The standard React class property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen?: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart?: (e: any) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router: AnyRouter\n\n  routerState: any\n  /**\n   * Use this to attach the devtool's styles to specific element in the DOM.\n   */\n  shadowDOMTarget?: ShadowRoot\n}\n\nclass TanStackRouterDevtoolsPanelCore {\n  #router: any\n  #routerState: any\n  #style: any\n  #className: any\n  #shadowDOMTarget?: ShadowRoot\n  #isMounted = false\n  #setIsOpen?: (isOpen: boolean) => void\n  #dispose?: () => void\n  #Component: any\n\n  constructor(config: TanStackRouterDevtoolsPanelCoreOptions) {\n    const {\n      router,\n      routerState,\n      shadowDOMTarget,\n      setIsOpen,\n      style,\n      className,\n    } = config\n\n    this.#router = createSignal(router)\n    this.#routerState = createSignal(routerState)\n    this.#style = createSignal(style)\n    this.#className = createSignal(className)\n    this.#shadowDOMTarget = shadowDOMTarget\n    this.#setIsOpen = setIsOpen\n  }\n\n  mount<T extends HTMLElement>(el: T) {\n    if (this.#isMounted) {\n      throw new Error('Devtools is already mounted')\n    }\n\n    const dispose = render(() => {\n      const [router] = this.#router\n      const [routerState] = this.#routerState\n      const [style] = this.#style\n      const [className] = this.#className\n      const shadowDOMTarget = this.#shadowDOMTarget\n      const setIsOpen = this.#setIsOpen\n\n      let BaseTanStackRouterDevtoolsPanel\n\n      if (this.#Component) {\n        BaseTanStackRouterDevtoolsPanel = this.#Component\n      } else {\n        BaseTanStackRouterDevtoolsPanel = lazy(\n          () => import('./BaseTanStackRouterDevtoolsPanel'),\n        )\n        this.#Component = BaseTanStackRouterDevtoolsPanel\n      }\n\n      return (\n        <ShadowDomTargetContext.Provider value={shadowDOMTarget}>\n          <DevtoolsOnCloseContext.Provider\n            value={{\n              onCloseClick: () => {},\n            }}\n          >\n            <BaseTanStackRouterDevtoolsPanel\n              router={router}\n              routerState={routerState}\n              shadowDOMTarget={shadowDOMTarget}\n              setIsOpen={setIsOpen}\n              style={style}\n              className={className}\n            />\n          </DevtoolsOnCloseContext.Provider>\n        </ShadowDomTargetContext.Provider>\n      )\n    }, el)\n\n    this.#isMounted = true\n    this.#dispose = dispose\n  }\n\n  unmount() {\n    if (!this.#isMounted) {\n      throw new Error('Devtools is not mounted')\n    }\n    this.#dispose?.()\n    this.#isMounted = false\n  }\n\n  setRouter(router: AnyRouter) {\n    this.#router[1](router)\n  }\n\n  setRouterState(routerState: any) {\n    this.#routerState[1](routerState)\n  }\n\n  setStyle(style: any) {\n    this.#style[1](style)\n  }\n\n  setClassName(className: any) {\n    this.#className[1](className)\n  }\n\n  setOptions(options: Partial<TanStackRouterDevtoolsPanelCoreOptions>) {\n    if (options.shadowDOMTarget !== undefined) {\n      this.#shadowDOMTarget = options.shadowDOMTarget\n    }\n    if (options.router !== undefined) {\n      this.setRouter(options.router)\n    }\n    if (options.routerState !== undefined) {\n      this.setRouterState(options.routerState)\n    }\n\n    if (options.style !== undefined) {\n      this.setStyle(options.style)\n    }\n\n    if (options.className !== undefined) {\n      this.setClassName(options.className)\n    }\n  }\n}\n\nexport { TanStackRouterDevtoolsPanelCore }\n"],"names":["TanStackRouterDevtoolsPanelCore","constructor","config","router","routerState","shadowDOMTarget","setIsOpen","style","className","createSignal","mount","el","Error","dispose","render","BaseTanStackRouterDevtoolsPanel","lazy","_$createComponent","ShadowDomTargetContext","Provider","value","children","DevtoolsOnCloseContext","onCloseClick","unmount","setRouter","setRouterState","setStyle","setClassName","setOptions","options","undefined"],"mappings":"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"}